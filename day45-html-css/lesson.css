/* 1 */
/* body{
    display: grid;
    justify-items: center; ჰორიზონტალურად ცენტრში
    align-items: center; ვერტიკალურად ცენტრში
    height: 100vh;
} */
body{
    height: 100vh;
}

.container-1{
    height: 100%;
    display: grid;
    grid-template-columns: 3fr 1fr;
    grid-template-rows: 1fr 3fr 1fr;
    border: 2px solid red;
    gap: 2px;
    grid-template-areas: /* შეგვიძლია გადავცეთ რამდენიმე მნიშვნელობები */
    'header header'
    'main aside'
    'footer footer';
}

.item{
    background-color: red;
    display: grid;
    justify-items: center;
    align-items: center;
}
.item1{
    grid-area: header; /* grid-area-ს გამოყენებით ჩვენ კონკრეტულ column-ებს და row-ებს დავარქვით სახელი */
    background-color: blue;
}
.item2{
    grid-area: main;
    background-color: red;
}
.item3{
    grid-area: aside;
    background-color: blueviolet;
}
.item4{
    grid-area: footer;
    background-color: greenyellow;
}


/* 2 */
.container-2{
    display: grid;
    grid-template-columns: 1fr minmax(100px, 1fr) 1fr; /* minmax() გადაეცემა ორი პარამეტრი 1)მინიმალური ზომა 2)მაქსიმალური ზომა */

    grid-template-rows: 100px 100px 100px;
    border: 2px solid red;
    gap: 1px;
}
.container-2 div{
    background-color: red;
}


/* 3 */
.container-3{
    display: grid;
    /* justify-items: start, center, end, baseline; ჰორიზონტალურად */
    /* align-items: start, center, end, baseline; ვერტიკალურად */
    /* justify-content: start, center, end, space-between, space-around, space-evenly; */
    /* align-content: start, center, end, space-between, space-around, space-evenly; */
    /* grid-auto-flow: column, row; მისი თავდაპირველი მნიშვნელობა არის row*/

    grid-template-columns: repeat(2, 100px);  /* repeat(4, minmax(200px, 1fr)) */
    grid-template-rows: repeat(2, 100px);
    border: 2px solid red;
    height: 600px;
    width: 600px;
    gap: 1px;
}
.container-3 div{
    background-color: red;
}


/* 4 */
.container-4{
    display: grid;
    border: 2px solid red;
    grid-template-rows: repeat(4, 100px);
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); /* auto-fit-ის გამოყენებით როდესაც ელემენტები შეიკუმშება და გახდება 100px-ი ის ავტომატურად ჩამოყრის ქვემოთ ელემენტებს და დაალაგებს მას ახალ row-ებად */
    gap: 1px;
}
.container-4 div{
    background-color: red;
}
